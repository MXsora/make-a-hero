[gd_scene load_steps=6 format=2]

[ext_resource path="res://Scripts/Transition.cs" type="Script" id=1]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform vec2 fragmentNumber = vec2(20,20);
uniform float dissolveState : hint_range(0.0, 3.0) = 3;

void fragment()
{
	vec2 pixelFract = fract(UV * fragmentNumber);
	float pixelDist = distance(pixelFract, vec2(0.5,0.5));
	//COLOR = texture(TEXTURE, UV);
	COLOR.a *= step(pixelDist, dissolveState + (UV.x - 1.0) + (UV.y - 1.0));
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/fragmentNumber = Vector2( 20, 20 )
shader_param/dissolveState = 3.0

[sub_resource type="Animation" id=3]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath(".:material:shader_param/dissolveState")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 3.0 ]
}

[sub_resource type="Animation" id=4]
resource_name = "Transition"
tracks/0/type = "value"
tracks/0/path = NodePath(".:material:shader_param/dissolveState")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.0, 3.0 ]
}

[node name="Transition" type="ColorRect"]
material = SubResource( 2 )
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
color = Color( 0, 0, 0, 1 )
script = ExtResource( 1 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/RESET = SubResource( 3 )
anims/Transition = SubResource( 4 )
